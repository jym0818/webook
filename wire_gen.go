// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/jym0818/webook/internal/repository"
	"github.com/jym0818/webook/internal/repository/cache"
	"github.com/jym0818/webook/internal/repository/dao"
	"github.com/jym0818/webook/internal/service"
	"github.com/jym0818/webook/internal/web"
	"github.com/jym0818/webook/ioc"
)

// Injectors from wire.go:

func InitServer() *gin.Engine {
	db := ioc.InitDB()
	userDAO := dao.NewuserDAO(db)
	cmdable := ioc.InitRedis()
	userCache := cache.NewuserCache(cmdable)
	userRepository := repository.NewuserRepository(userDAO, userCache)
	userService := service.NewuserService(userRepository)
	codeCache := cache.NewcodeCache(cmdable)
	codeRepository := repository.NewcodeRepository(codeCache)
	smsService := ioc.InitSMS(cmdable)
	codeService := service.NewcodeService(codeRepository, smsService)
	userHandler := web.NewUserHandler(userService, codeService, cmdable)
	v := ioc.InitMiddlware(cmdable)
	wechatService := ioc.InitWechat()
	config := ioc.InitWechatCfg()
	oAuth2WechatHandler := web.NewOAuth2WechatHandler(wechatService, userService, config)
	articleDAO := dao.NewarticleDAO(db)
	articleCache := cache.NewarticleCache(cmdable)
	articleRepository := repository.NewarticleRepository(articleDAO, articleCache, userRepository)
	articleService := service.NewarticleService(articleRepository)
	interactiveCache := cache.NewinteractiveCache(cmdable)
	interactiveDAO := dao.NewinteractiveDAO(db)
	interactiveRepository := repository.NewinteractiveRepository(interactiveCache, interactiveDAO)
	interactiveService := service.NewinteractiveService(interactiveRepository)
	articleHandler := web.NewArticleHandler(articleService, interactiveService)
	engine := ioc.InitWeb(userHandler, v, oAuth2WechatHandler, articleHandler)
	return engine
}

// wire.go:

var UserService = wire.NewSet(cache.NewuserCache, dao.NewuserDAO, repository.NewuserRepository, service.NewuserService)

var CodeService = wire.NewSet(cache.NewcodeCache, repository.NewcodeRepository, service.NewcodeService)

var ArticleService = wire.NewSet(dao.NewarticleDAO, cache.NewarticleCache, repository.NewarticleRepository, service.NewarticleService)

var InteractiveService = wire.NewSet(dao.NewinteractiveDAO, cache.NewinteractiveCache, repository.NewinteractiveRepository, service.NewinteractiveService)

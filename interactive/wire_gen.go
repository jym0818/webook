// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/jym0818/webook/interactive/events"
	"github.com/jym0818/webook/interactive/grpc"
	"github.com/jym0818/webook/interactive/ioc"
	"github.com/jym0818/webook/interactive/repository"
	"github.com/jym0818/webook/interactive/repository/cache"
	"github.com/jym0818/webook/interactive/repository/dao"
	"github.com/jym0818/webook/interactive/service"
)

// Injectors from wire.go:

func InitApp() *App {
	cmdable := ioc.InitRedis()
	interactiveCache := cache.NewinteractiveCache(cmdable)
	db := ioc.InitDB()
	interactiveDAO := dao.NewinteractiveDAO(db)
	interactiveRepository := repository.NewinteractiveRepository(interactiveCache, interactiveDAO)
	interactiveService := service.NewinteractiveService(interactiveRepository)
	interactiveServiceServer := grpc.NewInteractiveServiceServer(interactiveService)
	server := ioc.InitGRPCxServer(interactiveServiceServer)
	client := ioc.InitKafka()
	consumer := events.NewReadEventArticleConsumer(interactiveRepository, client)
	v := ioc.NewConsumers(consumer)
	app := &App{
		server:    server,
		consumers: v,
	}
	return app
}

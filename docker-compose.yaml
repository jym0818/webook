services:
  mysql8:
    image: mysql:8.0.29        # 使用 MySQL 8.0.29 官方镜像
    restart: always            # 容器退出时自动重启
    command: --default-authentication-plugin=mysql_native_password  # 使用旧版密码认证方式
    environment:
      MYSQL_ROOT_PASSWORD: root  # 设置 root 用户密码
    volumes:
      #volumes 部分将本地的 ./script/mysql/ 目录挂载到容器的 /docker-entrypoint-initdb.d/ 目录。
      - ./script/mysql/:/docker-entrypoint-initdb.d/  # 挂载初始化 SQL 脚本
    ports:
      - "13316:3306"           # 将容器 3306 端口映射到宿主机 13316 端口

  redis:
    image: bitnami/redis:latest  # 使用 Bitnami 的 Redis 镜像
    environment:
      - ALLOW_EMPTY_PASSWORD=yes  # 允许空密码（无密码访问）
    ports:
      - '6379:6379'             # 映射 Redis 默认端口

  kafka:
    image: 'bitnami/kafka:3.6.0'
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      #      - 允许自动创建 topic，线上不要开启
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://118.25.44.1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  prometheus:
    image: prom/prometheus:v2.47.2
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      #      - 将本地的 prometheus 文件映射到容器内的配置文件
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      #      - 访问数据的端口
      - 9090:9090

  zipkin:
    #    用的是不支持 Kafka 之类的简化版本
    image: openzipkin/zipkin-slim:2.24
    ports:
      - '9411:9411'
